#!/usr/bin/env python
#
# Copyright 2012, 42Lines, Inc.
# Original Author: Jim Browne
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import pynagios
from pynagios import Plugin, make_option, Response
import boto
from boto.ec2 import regions


class VolumeEventsCheck(Plugin):
    region = make_option("--region",
                         help="Region to check (default: us-east-1)",
                         default=[],
                         action="append")
    allregions = make_option("--all",
                             help="Check all regions",
                             action="store_true")

    responses = []

    def check(self):
        boto_old = 1

        # Boto 2.3.0 and later has volume status code
        # Boto < 2.0 missing __version__, hence try/except
        try:
            if boto.__version__ >= '2.3.0':
                boto_old = 0
        except AttributeError:
            pass

        if boto_old:
            message = "Boto version too old.  Need 2.3.0 or later"
            return Response(pynagios.UNKNOWN, message)

        if not self.options.region:
            self.options.region = ["us-east-1"]

        if self.options.allregions:
            regs = regions()
        else:
            regs = []
            for ropt in self.options.region:
                for r in regions():
                    if r.name == ropt:
                        regs.append(r)
                        break
                else:
                    message = "Region %s not found." % ropt
                    return Response(pynagios.UNKNOWN, message)

        for r in regs:
            self.regioncheck(r)

        if len(self.responses):
            result = Response(pynagios.WARNING, ", ".join(self.responses))
        else:
            names = [r.name for r in regs]
            result = Response(pynagios.OK, "Checked regions: " +
                              ", ".join(names))
        return result

    def regioncheck(self, region):

        import re

        ec2 = boto.connect_ec2(region=region)
        reservations = ec2.get_all_instances()
        #vfilter = { 'volume-status.status' : 'impaired' }
        #stats = ec2.get_all_volume_status(filters=vfilter)
        stats = ec2.get_all_volume_status()

        for stat in stats:
            if self.options.verbosity:
                print "id %s status %s" % (stat.id, stat.volume_status)
            if stat.events:
                for event in stat.events:
                    if self.options.verbosity:
                        print event
                    message = stat.id
                    message += ":%s %s" % (event.type, event.description)
                    message += " nb %s" % (event.not_before)
                    self.responses.append(message)
            if stat.actions:
                for action in stat.actions:
                    if self.options.verbosity:
                        print action
                    message = stat.id
                    message += ":%s %s" % (action.type, action.description)
                    message += " code %s" % (action.code)
                    self.responses.append(message)

if __name__ == "__main__":
    # Instantiate the plugin, check it, and then exit
    VolumeEventsCheck().check().exit()
